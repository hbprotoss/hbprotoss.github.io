{"THEME_REVEAL_CONGIF_TRANSITION": "cube", "LICENSE": "\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width:0\" src=\"http://i.creativecommons.org/l/by-nc-nd/3.0/88x31.png\" /></a><br />\u672c\u4f5c\u54c1\u91c7\u7528<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh\">\u77e5\u8bc6\u5171\u4eab\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 3.0 \u672a\u672c\u5730\u5316\u7248\u672c\u8bb8\u53ef\u534f\u8bae</a>\u8fdb\u884c\u8bb8\u53ef\u3002", "text": "<html><body><p>\u5199\u4e4b\u524d\u5148\u5410\u69fd\u51e0\u53e5\uff1aPython\u793e\u533a\u592a\u61d2\u4e86\uff0cPython3\u90fd\u63a8\u51fa\u591a\u5c11\u5e74\u4e86\uff0c\u90a3\u4e48\u591a\u7b2c\u4e09\u65b9\u5e93\u8fd8\u4e0dport\u5230Python3\u3002\u4e0d\u80fd\u5b89\u4e8e\u73b0\u72b6\u554a\uff01  </p>\n<hr><p>\u4e0b\u9762\u662f\u6b63\u9898\uff1a</p>\n<p>\u6700\u8fd1\u5199\u5fae\u535a\u5ba2\u6237\u7aef\uff0c\u4e0a\u4f20\u56fe\u7247\u9700\u8981multipart/form-data\u7f16\u7801\u56fe\u7247\u548c\u53c2\u6570\uff0c\u7531\u4e8e\u524d\u9762\u8bf4\u7684\u539f\u56e0\uff0c\u6ca1\u6709\u7b2c\u4e09\u65b9\u5e93\u53ef\u7528\uff0c\u6240\u4ee5\u5c31\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e0b\u3002</p>\n<p>\u5148\u8d34\u4e00\u4e0bmultipart/form-data\u7684RFC\u6587\u6863\u5730\u5740\uff1a<a href=\"http://www.ietf.org/rfc/rfc2388.txt\">\u70b9\u8fd9\u91cc</a></p>\n<p>multipart/form-data\u4e3b\u8981\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a  </p>\n<ol><li>HTTP Header\u3002\u9700\u8981\u6dfb\u52a0\u5934\"Content-Type: multipart/form-data; boundary=%s\"\uff0c\u8fd9\u4e2aboundary\u5c31\u662f\u5206\u9694\u7b26\uff0c\u89c1\u7b2c\u4e8c\u6761\u3002</li>\n<li>\u5206\u9694\u7b26boundary\u3002\u5206\u9694\u7b26\u662f\u4e00\u4e32\u548c\u6b63\u6587\u5185\u5bb9\u4e0d\u51b2\u7a81\u7684\u5b57\u7b26\u4e32\uff0c\u7528\u4ee5\u5206\u5272\u591a\u4e2a\u53c2\u6570\u3002\u4e00\u822c\u90fd\u662fN\u4e2a\u51cf\u53f7+\u968f\u673a\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982\"----------\u5f53\u524d\u65f6\u95f4\"\u3002<br>\n   \u6b63\u6587\u9700\u8981\u52a0header\uff1a<br>\n   Content-Disposition: form-data; name=\"%s\"\uff0c%s\u4e3a\u9700\u8981\u4f20\u9012\u7684\u53d8\u91cf\u540d\u3002<br>\n   Content-Type: \u6307\u5b9a\u6b63\u6587MIME\u7c7b\u578b\uff0c\u9ed8\u8ba4\u662f\u7eaf\u6587\u672ctext/plain\uff0c\u672a\u77e5\u7c7b\u578b\u53ef\u4ee5\u586bapplication/octet-stream\u3002  </li>\n<li>\u6570\u636e\u3002\u8981\u6ce8\u610f\u7684\u662f\u6570\u636e\u7684\u7f16\u7801\uff0c\u6587\u6863\u4e0a\u8bf4\"7BIT encoding\"\uff0cISO-8859-1\u5373\u53ef\u3002</li>\n</ol><p>\u4e0b\u9762\u8d34\u4e00\u6bb5\u4e0a\u4f20\u65b0\u6d6a\u5fae\u535a\u56fe\u7247\u7684\u4ee3\u7801\uff1a  </p>\n<table class=\"codehilitetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre> 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54</pre></div></td><td class=\"code\"><div class=\"code\"><pre><span class=\"c\">#!/usr/bin/env python3</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">urllib.request</span>\n<span class=\"kn\">import</span> <span class=\"nn\">urllib.parse</span>\n<span class=\"kn\">import</span> <span class=\"nn\">urllib.error</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">mimetypes</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">_encode_multipart</span><span class=\"p\">(</span><span class=\"n\">params_dict</span><span class=\"p\">):</span>\n    <span class=\"sd\">'''</span>\n<span class=\"sd\">    Build a multipart/form-data body with generated random boundary.</span>\n<span class=\"sd\">    '''</span>\n    <span class=\"n\">boundary</span> <span class=\"o\">=</span> <span class=\"s\">'----------%s'</span> <span class=\"o\">%</span> <span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"mi\">1000</span><span class=\"p\">))</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">params_dict</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">'--%s'</span> <span class=\"o\">%</span> <span class=\"n\">boundary</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"s\">'read'</span><span class=\"p\">):</span>\n        <span class=\"n\">filename</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"s\">'name'</span><span class=\"p\">,</span> <span class=\"s\">''</span><span class=\"p\">)</span>\n        <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n        <span class=\"n\">decoded_content</span> <span class=\"o\">=</span> <span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s\">'ISO-8859-1'</span><span class=\"p\">)</span>\n        <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">'Content-Disposition: form-data; name=\"%s\"; filename=\"hidden\"'</span> <span class=\"o\">%</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n        <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">'Content-Type: application/octet-stream</span><span class=\"se\">\\r\\n</span><span class=\"s\">'</span><span class=\"p\">)</span>\n        <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">decoded_content</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">'Content-Disposition: form-data; name=\"%s\"</span><span class=\"se\">\\r\\n</span><span class=\"s\">'</span> <span class=\"o\">%</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n        <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">v</span> <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s\">'utf-8'</span><span class=\"p\">))</span>\n    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s\">'--%s--</span><span class=\"se\">\\r\\n</span><span class=\"s\">'</span> <span class=\"o\">%</span> <span class=\"n\">boundary</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"s\">'</span><span class=\"se\">\\r\\n</span><span class=\"s\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">),</span> <span class=\"n\">boundary</span>\n\n<span class=\"c\">#############################################################</span>\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s\">'https://upload.api.weibo.com/2/statuses/upload.json'</span>\n<span class=\"n\">access_token</span> <span class=\"o\">=</span> <span class=\"s\">'xxx'</span>\n<span class=\"n\">file_name</span> <span class=\"o\">=</span> <span class=\"s\">'big.png'</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s\">'/home/xxx/Downloads/'</span> <span class=\"o\">+</span> <span class=\"n\">file_name</span>\n<span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s\">'1234567'</span>\n\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s\">'access_token'</span><span class=\"p\">:</span> <span class=\"n\">access_token</span><span class=\"p\">,</span>\n    <span class=\"s\">'status'</span><span class=\"p\">:</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"o\">.</span><span class=\"n\">quote</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">),</span>\n    <span class=\"s\">'pic'</span><span class=\"p\">:</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s\">'rb'</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">coded_params</span><span class=\"p\">,</span> <span class=\"n\">boundary</span> <span class=\"o\">=</span> <span class=\"n\">_encode_multipart</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"c\">#############################################################</span>\n<span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">coded_params</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s\">'ISO-8859-1'</span><span class=\"p\">))</span>\n<span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">add_header</span><span class=\"p\">(</span><span class=\"s\">'Content-Type'</span><span class=\"p\">,</span> <span class=\"s\">'multipart/form-data; boundary=%s'</span> <span class=\"o\">%</span> <span class=\"n\">boundary</span><span class=\"p\">)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">urlopen</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">)</span>\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s\">'utf-8'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"o\">.</span><span class=\"n\">HTTPError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n</pre></div>\n</td></tr></table><p><strong>\u5176\u4e2d\u5c24\u5176\u8981\u6ce8\u610f\u7684\u662f\uff0cPOST\u4e0a\u53bb\u7684data\u90e8\u5206\u8981encode\u6210ISO-8859-1\u3002\u4e00\u5f00\u59cb\u4e00\u76f4encode\u6210UTF-8\uff0c\u6b7b\u6d3b\u62a5\u7684\u90fd\u662f\u683c\u5f0f\u9519\u8bef\u3002</strong></p></body></html>", "ARCHIVE_FILENAME": "archive.html", "THEME_REVEAL_CONGIF_SUBTHEME": "sky", "message_Read more": "Read more", "SITE_URL": "http://hbprotoss.github.io", "LISTINGS_FOLDER": "listings", "INDEXES_PAGES": "", "next": "/posts/python-decoratorde-ying-yong.json", "message_Next post": "Next post", "BLOG_DESCRIPTION": "\u6280\u672f\u535a\u5ba2\u4e3a\u4e3b\uff0c\u8f85\u4ee5\u5404\u79cd\u8f85\u6599\u3002\u4ed9\u5251\u8111\u6b8b\u7c89", "EXTRA_HEAD_DATA": "", "DEFAULT_LANG": "en", "disqus_html": "<div id=\"disqus_thread\"></div> <script type=\"text/javascript\">var disqus_shortname=\"hbprotoss\";var disqus_url=\"http://hbprotoss.github.io/posts/multipartform-datade-shi-xian.html\";(function(){var a=document.createElement(\"script\");a.type=\"text/javascript\";a.async=true;a.src=\"http://\"+disqus_shortname+\".disqus.com/embed.js\";(document.getElementsByTagName(\"head\")[0]||document.getElementsByTagName(\"body\")[0]).appendChild(a)})();        </script><noscript>Please enable JavaScript to view the <a href=\"http://disqus.com/?ref_noscript\">comments powered by DISQUS.</a></noscript><a href=\"http://disqus.com\"class=\"dsq-brlink\">comments powered by <span class=\"logo-disqus\">DISQUS</span></a>", "RSS_PATH": "", "title": "multipart/form-data\u7684\u5b9e\u73b0", "SEARCH_FORM": "\n<!-- Custom search -->\n<form method=\"get\" id=\"search\" action=\"http://duckduckgo.com/\"\n class=\"navbar-form pull-left\">\n<input type=\"hidden\" name=\"sites\" value=\"http://hbprotoss.github.io\"/>\n<input type=\"hidden\" name=\"k8\" value=\"#444444\"/>\n<input type=\"hidden\" name=\"k9\" value=\"#D51920\"/>\n<input type=\"hidden\" name=\"kt\" value=\"h\"/>\n<input type=\"text\" name=\"q\" maxlength=\"255\"\n placeholder=\"Search&hellip;\" class=\"span2\" style=\"margin-top: 4px;\"/>\n<input type=\"submit\" value=\"DuckDuckGo Search\" style=\"visibility: hidden;\" />\n</form>\n<!-- End of custom search -->\n", "message_Tags": "Tags", "INDEX_PATH": "", "BLOG_AUTHOR": "hbprotoss", "message_Older posts": "Older posts", "OUTPUT_FOLDER": "output", "message_Original site": "Original site", "ANALYTICS": "", "BLOG_EMAIL": "", "message_Posts for year %s": "Posts for year %s", "message_old posts page %d": "old posts page %d", "BLOG_TITLE": "hbprotoss\u7684\u535a\u5ba2", "message_Posted": "Posted", "GALLERY_PATH": "galleries", "CODE_COLOR_SCHEME": "default", "message_Read in English": "Read in English", "CACHE_FOLDER": "cache", "tags": [{"link": "/categories/python.html", "name": "Python"}], "tags?": true, "__file__": "conf.pyc", "translations": [], "CONTENT_FOOTER": "\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width:0\" src=\"http://i.creativecommons.org/l/by-nc-nd/3.0/88x31.png\" /></a><br />\u672c\u4f5c\u54c1\u91c7\u7528<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh\">\u77e5\u8bc6\u5171\u4eab\u7f72\u540d-\u975e\u5546\u4e1a\u6027\u4f7f\u7528-\u7981\u6b62\u6f14\u7ece 3.0 \u672a\u672c\u5730\u5316\u7248\u672c\u8bb8\u53ef\u534f\u8bae</a>\u8fdb\u884c\u8bb8\u53ef\u3002<br />Contents &copy; 2013 <a href=\"mailto:\">hbprotoss</a> - Powered by <a href=\"http://nikola.ralsina.com.ar\">Nikola</a>", "BASE_URL": "http://hbprotoss.github.io", "THEME": "site", "GIT_DIR": "--git-dir=output/.git --work-tree=output", "message_Also available in": "Also available in", "message_Previous post": "Previous post", "date": "2013-03-29 09:19", "__name__": "conf", "message_Posts about %s": "Posts about %s", "message_More posts about": "More posts about", "ARCHIVE_PATH": "", "DATE_FORMAT": "%Y-%m-%d %H:%M", "TAG_PATH": "categories", "prev": "/posts/nikolagitpageda-jian-bo-ke.json", "message_Newer posts": "Newer posts", "message_LANGUAGE": "English", "MATHJAX_CONFIG": "", "message_Archive": "Archive", "message_Source": "Source", "DISQUS_FORUM": "hbprotoss", "INDEXES_TITLE": ""}