{
  "pages": [
    {
      "text": "\u5199\u4e4b\u524d\u5148\u5410\u69fd\u51e0\u53e5\uff1aPython\u793e\u533a\u592a\u61d2\u4e86\uff0cPython3\u90fd\u63a8\u51fa\u591a\u5c11\u5e74\u4e86\uff0c\u90a3\u4e48\u591a\u7b2c\u4e09\u65b9\u5e93\u8fd8\u4e0dport\u5230Python3\u3002\u4e0d\u80fd\u5b89\u4e8e\u73b0\u72b6\u554a\uff01  \n\u4e0b\u9762\u662f\u6b63\u9898\uff1a\n\u6700\u8fd1\u5199\u5fae\u535a\u5ba2\u6237\u7aef\uff0c\u4e0a\u4f20\u56fe\u7247\u9700\u8981multipart/form-data\u7f16\u7801\u56fe\u7247\u548c\u53c2\u6570\uff0c\u7531\u4e8e\u524d\u9762\u8bf4\u7684\u539f\u56e0\uff0c\u6ca1\u6709\u7b2c\u4e09\u65b9\u5e93\u53ef\u7528\uff0c\u6240\u4ee5\u5c31\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e0b\u3002\n\u5148\u8d34\u4e00\u4e0bmultipart/form-data\u7684RFC\u6587\u6863\u5730\u5740\uff1a\u70b9\u8fd9\u91cc\nmultipart/form-data\u4e3b\u8981\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a  \nHTTP Header\u3002\u9700\u8981\u6dfb\u52a0\u5934\"Content-Type: multipart/form-data; boundary=%s\"\uff0c\u8fd9\u4e2aboundary\u5c31\u662f\u5206\u9694\u7b26\uff0c\u89c1\u7b2c\u4e8c\u6761\u3002\n\u5206\u9694\u7b26boundary\u3002\u5206\u9694\u7b26\u662f\u4e00\u4e32\u548c\u6b63\u6587\u5185\u5bb9\u4e0d\u51b2\u7a81\u7684\u5b57\u7b26\u4e32\uff0c\u7528\u4ee5\u5206\u5272\u591a\u4e2a\u53c2\u6570\u3002\u4e00\u822c\u90fd\u662fN\u4e2a\u51cf\u53f7+\u968f\u673a\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982\"----------\u5f53\u524d\u65f6\u95f4\"\u3002\n   \u6b63\u6587\u9700\u8981\u52a0header\uff1a\n   Content-Disposition: form-data; name=\"%s\"\uff0c%s\u4e3a\u9700\u8981\u4f20\u9012\u7684\u53d8\u91cf\u540d\u3002\n   Content-Type: \u6307\u5b9a\u6b63\u6587MIME\u7c7b\u578b\uff0c\u9ed8\u8ba4\u662f\u7eaf\u6587\u672ctext/plain\uff0c\u672a\u77e5\u7c7b\u578b\u53ef\u4ee5\u586bapplication/octet-stream\u3002  \n\u6570\u636e\u3002\u8981\u6ce8\u610f\u7684\u662f\u6570\u636e\u7684\u7f16\u7801\uff0c\u6587\u6863\u4e0a\u8bf4\"7BIT encoding\"\uff0cISO-8859-1\u5373\u53ef\u3002\n\u4e0b\u9762\u8d34\u4e00\u6bb5\u4e0a\u4f20\u65b0\u6d6a\u5fae\u535a\u56fe\u7247\u7684\u4ee3\u7801\uff1a  \n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54#!/usr/bin/env python3\n\nimport urllib.request\nimport urllib.parse\nimport urllib.error\nimport time\nimport json\nimport mimetypes\n\ndef _encode_multipart(params_dict):\n    '''\n    Build a multipart/form-data body with generated random boundary.\n    '''\n    boundary = '----------%s' % hex(int(time.time() * 1000))\n    data = []\n    for k, v in params_dict.items():\n    data.append('--%s' % boundary)\n    if hasattr(v, 'read'):\n        filename = getattr(v, 'name', '')\n        content = v.read()\n        decoded_content = content.decode('ISO-8859-1')\n        data.append('Content-Disposition: form-data; name=\"%s\"; filename=\"hidden\"' % k)\n        data.append('Content-Type: application/octet-stream\\r\\n')\n        data.append(decoded_content)\n    else:\n        data.append('Content-Disposition: form-data; name=\"%s\"\\r\\n' % k)\n        data.append(v if isinstance(v, str) else v.decode('utf-8'))\n    data.append('--%s--\\r\\n' % boundary)\n    return '\\r\\n'.join(data), boundary\n\n#############################################################\nurl = 'https://upload.api.weibo.com/2/statuses/upload.json'\naccess_token = 'xxx'\nfile_name = 'big.png'\npath = '/home/xxx/Downloads/' + file_name\nstatus = '1234567'\n\nparams = {\n    'access_token': access_token,\n    'status': urllib.parse.quote(status),\n    'pic': open(path, 'rb')\n}\n\ncoded_params, boundary = _encode_multipart(params)\n\n#############################################################\nreq = urllib.request.Request(url, coded_params.encode('ISO-8859-1'))\nreq.add_header('Content-Type', 'multipart/form-data; boundary=%s' % boundary)\ntry:\n    resp = urllib.request.urlopen(req)\n    body = resp.read().decode('utf-8')\n    print(body)\nexcept urllib.error.HTTPError as e:\n    print(e.fp.read())\n\n\u5176\u4e2d\u5c24\u5176\u8981\u6ce8\u610f\u7684\u662f\uff0cPOST\u4e0a\u53bb\u7684data\u90e8\u5206\u8981encode\u6210ISO-8859-1\u3002\u4e00\u5f00\u59cb\u4e00\u76f4encode\u6210UTF-8\uff0c\u6b7b\u6d3b\u62a5\u7684\u90fd\u662f\u683c\u5f0f\u9519\u8bef\u3002", 
      "tags": "Python", 
      "loc": "/posts/multipartform-datade-shi-xian.html", 
      "title": "multipart/form-data\u7684\u5b9e\u73b0"
    }, 
    {
      "text": "\u672c\u6765\u535a\u5ba2\u662f\u5728CSDN\u4e0a\u7684http://blog.csdn.net/digimon\uff0c\u4f46\u6700\u8fd1CSDN\u5728\u6211\u8fd9\u4e00\u76f4\u65e0\u6cd5\u767b\u5f55\uff0c\u5df2\u7ecf\u5728Evernote\u4e0a\u79ef\u538b\u4e86\u597d\u51e0\u7bc7\u535a\u5ba2\uff0c\u641e\u70e6\u4e86\uff0c\u51b3\u5b9a\u81ea\u5df1\u642d\u4e2a\u535a\u5ba2\u3002\n\u7531\u4e8e\u76ee\u524d\u662f\u6ca1\u6709\u6536\u5165\u6765\u6e90\u7684\u5c4c\u4e1d\uff0c\u6ca1\u94b1\u53bb\u4e70\u4e2a\u57df\u540d\u3001\u5f04\u4e2aVPS\uff0c\u53ea\u80fd\u60f3\u514d\u8d39\u7684\u62db\u4e86\u3002WordPress\u8fd9\u8d27\u5c4f\u853dGAE\u7684UA\uff0c\u5bfc\u81f4\u6ca1\u6cd5\u7533\u8bf7\u535a\u5ba2\uff0c\u6700\u540e\u60f3\u5230\u4e86gitpage\u3002\u867d\u7136gitpage\u4e5f\u6709\u968f\u65f6\u88ab\u5899\u7684\u98ce\u9669\uff0c\u4f46\u662f\u6211\u7684\u535a\u5ba2\u4e3b\u8981\u8bb0\u5f55\u6280\u672f\u5185\u5bb9\uff0c\u4f5c\u4e3a\u7a0b\u5e8f\u733f\u7ffb\u4e2a\u4f1f\u5927\u7684\u9632\u706b\u5899\u8fd8\u662f\u6ca1\u95ee\u9898\u7684\u5427;-)  \ngitpage\u53ea\u652f\u6301\u9759\u6001\u9875\u9762\uff0c\u7f51\u4e0a\u641c\u4e86\u4e00\u4e0b\uff0c\u751f\u6210\u9759\u6001\u9875\u9762\u7684\u5de5\u5177\u8fd8\u771f\u4e0d\u5c11\uff0c\u597d\u50cf\u4e13\u95e8\u4e3a\u6b64\u8bbe\u8ba1\u7684\u4e00\u6837\uff0c\u5957\u9910\u5450\u6709\u6728\u6709\u3002\nPython\u7684\u5c31\u6709\u4e0d\u5c11: What's the best available static blog/website generator in Python?\n\u8fd8\u6709\u66f4\u591a\u522b\u7684\u8bed\u8a00\u652f\u6301\u7684\u5de5\u5177: 32 Static Website Generators For Your Site, Blog Or Wiki  \n\u6700\u7ec8\u9009\u62e9\u4e86nikola\uff0c\u4e5f\u662f\u56e0\u4e3aQuora\u4e0a\u90a3\u7bc7\u6587\u7ae0\u7684\u63a8\u8350\u3002\nnikola\u5b98\u7f51\uff1ahttp://nikola.ralsina.com.ar/  \n\u8be6\u7ec6\u5b89\u88c5\u548c\u914d\u7f6e\u7684\u6559\u7a0b\u5c31\u4e0d\u8d58\u8ff0\u4e86\uff0c\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e24\u7bc7\u6587\u7ae0\uff1a\n+ The Nikola Handbook\uff08\u5b98\u7f51\u6559\u7a0b\uff09\n+ \u7528 nikola \u5199\u9759\u6001\u535a\u5ba2  \n\u4e0b\u9762\u8bf4\u4e00\u4e0b\u5b89\u88c5\u548c\u914d\u7f6enikola\u65f6\u8981\u6ce8\u610f\u7684\u95ee\u9898\u3002\n1.  \u5b98\u7f51\u4e0a\u7684\u5b89\u88c5\u6307\u5bfc\u4e2d\uff0c\u5982\u679c\u4f60\u662fUbuntu\u7528\u6237\u7684\u8bdd\uff0cMako\u4e00\u5b9a\u8981\u7528pip\u5b89\u88c5\u6216\u81ea\u5df1\u53bb\u4e0b\uff0cUbuntu\u5b98\u65b9\u6e90\u4e0a\u7684\u7248\u672c\u592a\u65e7\uff0c\u8fd0\u884c\u4f1a\u51fa\u95ee\u9898\u3002\n2.  \u559c\u6b22\u7528markdown\u7684\u7ae5\u978b\u9664\u4e86\u66f4\u6539nikola\u751f\u6210\u7684\u7ad9\u70b9\u6839\u76ee\u5f55\u4e0b\u7684\u4ececonf.py\u4e4b\u5916\uff0c\u65b0\u5efa\u535a\u6587\u7684\u65f6\u5019\u8981\u6ce8\u610f\u52a0\u4e0a-f markdown\u53c2\u6570\uff1anikola new_post -f markdown\n3.  \u559c\u6b22\u7528markdown\u7684\u7ae5\u978b\u8fd8\u5f97\u6ce8\u610f\u4e00\u4e0b(==!)\uff0c\u5b98\u65b90.5.4\u6709\u4e2abug\u3002\u5728/usr/local/lib/python2.7/dist-packages/nikola/plugins/compile_markdown/__init__.py\u6587\u4ef6\u4e2d\uff0c\u572873~81\u884c\u7684\u5b57\u7b26\u4e32\u524d\u52a0\u4e2a\u5b57\u6bcdu\u3002  \n    with codecs.open(path, \"wb+\", \"utf8\") as fd:\n        if onefile:\n            fd.write('<!-- \\n')\n            fd.write('.. title: {0}\\n'.format(title))\n            fd.write('.. slug: {0}\\n'.format(slug))\n            fd.write('.. date: {0}\\n'.format(date))\n            fd.write('.. tags: {0}\\n'.format(tags))\n            fd.write('.. link: \\n')\n            fd.write('.. description: \\n')\n            fd.write('-->\\n\\n')\n        fd.write(\"\\nWrite your post here.\")\n\n\n\n\u6539\u6210  \n    with codecs.open(path, \"wb+\", \"utf8\") as fd:\n        if onefile:\n            fd.write(u'<!-- \\n')\n            fd.write(u'.. title: {0}\\n'.format(title))\n            fd.write(u'.. slug: {0}\\n'.format(slug))\n            fd.write(u'.. date: {0}\\n'.format(date))\n            fd.write(u'.. tags: {0}\\n'.format(tags))\n            fd.write(u'.. link: \\n')\n            fd.write(u'.. description: \\n')\n            fd.write(u'-->\\n\\n')\n        fd.write(u\"\\nWrite your post here.\")\n\n\n\n\u56e0\u4e3a\u4e0d\u52a0u\u5c31\u662fstr\u5bf9\u8c61\uff0c\u5199\u5165\u7684\u662futf-8\u7f16\u7801\u7684\u6587\u4ef6\uff0c\u5f53title\u7b49\u53c2\u6570\u91cc\u51fa\u73b0\u975e\u82f1\u6587\u5b57\u6bcd\u7684\u65f6\u5019\u4f1a\u51fa\u5148\u89e3\u7801\u5f02\u5e38\u3002\uff08\u9a6c\u4e0a\u63d0\u4ea4\u4e2apull request\u53bb\uff09\n4.  \u60f3\u8981\u5feb\u901f\u5c06\u9875\u9762\u53d1\u5e03\u81f3github\uff0c\u8bf7\u53c2\u8003Deploying Nikola to Github Pages", 
      "tags": "nikola,github", 
      "loc": "/posts/nikolagitpageda-jian-bo-ke.html", 
      "title": "nikola+gitpage\u642d\u5efa\u535a\u5ba2"
    }, 
    {
      "text": "\u540c\u4e00\u4e2a\u6a21\u5757\u4ee5\u76f8\u540c\u7684\u6a21\u5757\u540d\u88ab\u5bfc\u5165\u65f6\uff0c\u6a21\u5757\u5185\u7684\u4ee3\u7801\u53ea\u6267\u884c\u4e00\u904d\uff08\u6a21\u5757\u540d\u5fc5\u987b\u76f8\u540c\uff09\u3002\n\u4f8b\uff1a  \n\nimport/\n\u00a0 \u00a0 test.py\n\u00a0 \u00a0 mo/\n\u00a0 \u00a0 \u00a0 \u00a0 A.py  \n\n# A.py\na = 1\nprint(a)\na += 1\n\n\n\n# test.py\n#!/usr/bin/env python3\nimport os\nimport sys\nimport mo.A\nimport mo.A\npath = os.path.abspath('./mo')\nprint(path)\nsys.path.append(path)\nimport A\n\n\n\ntest.py\u4e2d\uff0c\u7b2c4\u884c\u6267\u884c\u540e\u8f93\u51fa1\u3002\u7b2c5\u884c\u4e0d\u8f93\u51fa\uff0c\u56e0\u4e3amo.A\u5df2\u7ecf\u88ab\u5bfc\u5165\u5f53\u524dnamespace\u3002  \n\u4f46\u662f\u7b2c9\u884c\uff0c\u867d\u7136\u90fd\u662f\u540c\u4e00\u4e2a\u7269\u7406\u6587\u4ef6A.py\uff0c\u4f46\u662f\u88ab\u5bfc\u5165\u65f6\u7684\u540d\u5b57\u4e0d\u540c\uff08mo.A\u548cA\uff09\uff0c\u6240\u4ee5\u8fd8\u662f\u4f1a\u8f93\u51fa1\u3002mo.A\u548cA\u4f5c\u4e3a\u4e24\u4e2a\u72ec\u7acb\u7684module\u5bf9\u8c61\u5b58\u5728\u5f53\u524dnamespace\u4e2d\u3002  \n\u5982\u679c\u8981\u628a\u6a21\u5757\u4e2d\u7684\u53d8\u91cf\u5f53\u5168\u5c40\u53d8\u91cf\u6765\u4f7f\u7528\u7684\u8bdd\uff0c\u4e00\u5b9a\u8981\u4ece\u9879\u76ee\u9876\u90e8\u901a\u8fc7\u201c.\u201d\u4e00\u5c42\u4e00\u5c42import\u3002", 
      "tags": "Python", 
      "loc": "/posts/pythonde-importji-zhi.html", 
      "title": "python\u7684import\u673a\u5236"
    }, 
    {
      "text": "\u524d\u6bb5\u65f6\u95f4\u5728\u5199\u4ee3\u7801\u7684\u65f6\u5019\uff08\u7528\u4e86Qt\uff09\u51fa\u73b0\u4e86\u4f3c\u4e4e\u8ddf\u7ebf\u7a0b\u6c60\u6709\u5173\u7684bug\uff0c\u5728\u4e0d\u786e\u5b9a\u662f\u5426\u662fQt\u7ebf\u7a0b\u6c60\u5e93QThreadPool\u7684bug\u7684\u60c5\u51b5\u4e0b\uff0c\u81ea\u5df1\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u7a0b\u6c60\u4ee5\u786e\u5b9a\u5230\u5e95\u662f\u6211\u7684\u95ee\u9898\u8fd8\u662fQThreadPool\u662f\u5426\u771f\u6709bug\u3002\uff08\u5267\u900f\u4e0b\uff0c\u6700\u540e\u8bc1\u660e\u4e0d\u662fQThreadPool\u6709\u95ee\u9898\uff0c\u53ef\u80fd\u662f\u4fe1\u53f7\u5728\u7ebf\u7a0b\u4e4b\u95f4\u4f20\u9012\u7684\u65f6\u5019\u6709\u95ee\u9898\uff0c\u8fd9\u4e2abug\u81f3\u4eca\u672a\u4fee\u590d= =\uff09  \n\u4e0b\u9762\u8bb0\u5f55\u4e0b\u6211\u8fd9\u4e2a\u7ebf\u7a0b\u6c60\u7684\u5b9e\u73b0\u601d\u8def\u3002\n\u4e3b\u8981\u6709\u4e24\u4e2a\u7c7b\uff0cThread\u3001Manager\u3002ThreadPool\u7c7b\u662f\u6574\u4f53\u7684\u5305\u88c5\u3002  \nThread\uff0c\u7ee7\u627f\u81eaQThread\uff0c\u7528\u6765\u6267\u884c\u7ebf\u7a0b\u4ee3\u7801\uff0c\u5e76\u4e14\u4f5c\u4e3a\u7ebf\u7a0b\u5bf9\u8c61\u5b58\u5728\u3002\nManager\uff0c\u5f53\u524d\u7ebf\u7a0b\u6d3b\u52a8\u60c5\u51b5\u7684\u7ba1\u7406\u7c7b\uff0c\u68c0\u67e5\u7ebf\u7a0b\u6c60\u5185\u7a7a\u95f2\u7ebf\u7a0b\u7684\u60c5\u51b5\uff0c\u5e76\u7ba1\u7406\u65b0\u6dfb\u52a0\u7684\u4efb\u52a1\u3002  \nManager\nManager\u5185\u90e8\u6709\u4e00\u4e2a\u7ef4\u62a4\u7a7a\u95f2\u7ebf\u7a0b\u5bf9\u8c61\u7684\u96c6\u5408idle_thread\uff0c\u8003\u8651\u5230\u9700\u8981\u5728O(1)\u7684\u65f6\u95f4\u5185\u6dfb\u52a0\u6216\u5220\u9664\u6307\u5b9a\u5143\u7d20\uff0c\u7528\u4e86python\u5185\u7f6e\u7684set\u3002set\u5185\u90e8\u4f7f\u7528\u54c8\u5e0c\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u65f6\u95f4\u6548\u7387\u57fa\u672c\u80fd\u63a7\u5236\u5728O(1)\u5de6\u53f3\u3002\n\u8fd8\u6709\u4e00\u4e2a\u5df2\u6dfb\u52a0\u4efb\u52a1\u7684\u961f\u5217queue\u3002\u65f6\u95f4\u6548\u7387\u4e0a\uff0c\u5165\u961f\u548c\u51fa\u961f\u90fd\u8981\u6c42O(1)\u7684\u65f6\u95f4\uff0c\u4f46\u662f\u6700\u5148\u60f3\u5230\u7684python\u5185\u7f6e\u7684list\u5bf9\u8c61\u662f\u6570\u7ec4\u548c\u94fe\u8868\u7684\u7ed3\u5408\uff0c\u5165\u961f\u65f6\u95f4\u662fO(1)\uff0c\u51fa\u961f\u65f6\u95f4\u5374\u662fO(n)\uff08\u53c2\u89c1\u8fd9\u4e2a\u94fe\u63a5\uff09\uff0c\u6240\u4ee5\u7528\u4e86collections.deque\uff0c\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u80fd\u5b9e\u73b0\u5165\u961f\u548c\u51fa\u961f\u90fd\u662fO(1)\u7684\u65f6\u95f4\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u6211\u4e0d\u9700\u8981\u4f18\u5148\u7ea7\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u7ebf\u6027\u8868\u8db3\u77e3\u3002\u4ee5\u540e\u5982\u679c\u8981\u8003\u8651\u4f18\u5148\u7ea7\u7684\u8bdd\u4f1a\u6539\u6210\u5806\u3002\n\u53e6\u5916\u5c31\u662f\u4e00\u4e2aidle_thread\u7684\u4e92\u65a5\u91cfmutex\u3002\u56e0\u4e3aset\u5bf9\u8c61\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\uff0c\u6240\u4ee5\u5728\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\u7684\u65f6\u5019\u5fc5\u987b\u6709\u4e92\u65a5\u91cf\u4fdd\u62a4\u3002\u800ccollections.deque\u6587\u6863\u4e0a\u8bf4\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u6240\u4ee5\u5c31\u4e0d\u9700\u8981\u4e92\u65a5\u91cf\u4e4b\u7c7b\u7684\u673a\u5236\u4e86\u3002  \nManager\u7684\u63a5\u53e3\u6709\uff1a\nhasIdleThread\uff0c\u8fd4\u56de\u7ebf\u7a0b\u6c60\u5185\u662f\u5426\u8fd8\u6709\u7a7a\u95f2\u7ebf\u7a0b\u3002\nsetThreadIdle\uff0c\u5c06\u67d0\u4e2a\u7ebf\u7a0b\u52a0\u5165\u5230\u7a7a\u95f2\u7ebf\u7a0b\u6c60\u4e2d\u3002\nstartTask\uff0c\u5148\u5c06task\u5165\u961f\uff0c\u7136\u540e\u770b\u662f\u5426\u6709\u7a7a\u95f2\u7ebf\u7a0b\uff0c\u5982\u679c\u6709\u5219\u5728\u8fd9\u4e2a\u7a7a\u95f2\u7ebf\u7a0b\u4e0a\u6267\u884c\uff0c\u6ca1\u6709\u7684\u8bdd\u5c31\u7559\u5728\u961f\u5217\u91cc\u7b49\u5f85\u4e0b\u6b21\u8c03\u5ea6\u3002  \nThread\n\u5728run\u65b9\u6cd5\u5185\uff0c\u901a\u8fc7Manager\u53d6\u51fa\u4e00\u4e2atask\u6267\u884c\uff0c\u5faa\u73af\u76f4\u5230\u518d\u6ca1\u6709\u65b0\u7684task\u4e3a\u6b62\uff0c\u4e4b\u540e\u8df3\u51fa\u5faa\u73af\uff0c\u5c06\u81ea\u5df1\u52a0\u5165\u5230\u7a7a\u95f2\u7ebf\u7a0b\u96c6\u5408\u5185\u3002\n\u5176\u5b9e\u8fd9\u6837\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u7ebf\u7a0b\u4e00\u76f4\u5b58\u6d3b\uff0c\u8fd8\u662f\u4f1a\u6709\u9500\u6bc1\u548c\u91cd\u5efa\u7ebf\u7a0b\u7684\u52a8\u4f5c\uff0c\u800c\u4e14\u67d0\u4e9b\u6781\u7aef\u60c5\u51b5\u4e0b\u8fd8\u4f1a\u5f88\u9891\u7e41\u3002\u4f46\u662f\u6211\u5f53\u65f6\u7684\u60c5\u51b5\u662f\u8981\u6267\u884c\u7684\u4efb\u52a1\u4f1a\u4e00\u6b21\u6027\u5168\u90e8\u52a0\u5165\u5230\u961f\u5217\u91cc\uff0c\u800c\u4e0b\u4e00\u6b21\u540c\u6837\u7684\u6dfb\u52a0\u52a8\u4f5c\u4f1a\u76f8\u9694\u6bd4\u8f83\u957f\u7684\u65f6\u95f4\uff0c\u6240\u4ee5\u95ee\u9898\u4e0d\u5927\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5f53\u65f6\u53ea\u662f\u4e3a\u4e86\u786e\u5b9aQThreadPool\u662f\u5426\u6709bug\uff0c\u8fd9\u65b9\u9762\u6ca1\u6709\u8003\u8651\u5730\u592a\u591a\u3002  \n\u4e0b\u9762\u662f\u5177\u4f53\u4ee3\u7801\uff08\u9075\u5faaGPLv3\u534f\u8bae\uff09  \n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85#!/usr/bin/env python3\n\nimport collections\nfrom PyQt4.QtCore import *\nfrom app import logger\n\nlog = logger.getLogger(__name__)\n\nclass Thread(QThread):\n    def __init__(self, manager, name):\n    super(Thread, self).__init__()\n    self.manager = manager\n    self.name = name\n\n    def __str__(self):\n    return self.name\n\n    def run(self):\n    while True:\n        try:\n        log.debug(self.name + str(self.manager.queue))\n        task = self.manager.dequeueTask()\n        task.run()\n        if task.autoDelete():\n            del task\n        except IndexError:\n        # There is no task\n        log.debug(self.name + 'No task, %s quiting' % self)\n        break\n        except Exception as e:\n        print(e)\n\n    self.manager.setThreadIdle(self)\n\nclass Manager:\n    def __init__(self, max_thread_count):\n    self.max_thread_count = max_thread_count\n\n    self.threads = [Thread(self, 'thread_%d' % i) for i in range(max_thread_count)]\n\n    self.idle_threads = set(self.threads)\n    self.idle_threads_mutex = QMutex()\n\n    self.queue = collections.deque()\n\n    def hasIdleThread(self):\n    return len(self.idle_threads) != 0\n\n    def setThreadIdle(self, thread):\n    self.idle_threads_mutex.lock()\n    self.idle_threads.add(thread)\n    log.debug('%s becomes idle' % thread)\n    self.idle_threads_mutex.unlock()\n\n    def startTask(self, task):\n    self.enqueueTask(task)\n    log.debug('%s enqueued' % task)\n\n    self.idle_threads_mutex.lock()\n    try:\n        thread = self.idle_threads.pop()\n        thread.start()\n        log.debug('%s started' % task)\n    except KeyError:\n        # No idle thread\n        log.debug('No idle thread')\n        pass\n    except Exception as e:\n        print(e)\n    self.idle_threads_mutex.unlock()\n\n    def enqueueTask(self, task):\n    self.queue.append(task)\n\n    def dequeueTask(self):\n    return self.queue.popleft()\n\nclass ThreadPool:\n    def __init__(self, max_thread_count=2):\n    self.manager = Manager(max_thread_count)\n\n    def start(self, task):\n    if not isinstance(task, QRunnable):\n        raise TypeError('Task must be QRunnable object.')\n    self.manager.startTask(task)", 
      "tags": "Python,Qt,\u7ebf\u7a0b\u6c60", 
      "loc": "/posts/shi-xian-jian-dan-xian-cheng-chi.html", 
      "title": "\u5b9e\u73b0\u7b80\u5355\u7ebf\u7a0b\u6c60"
    }
  ]
}